{"ast":null,"code":"import { ADD_USER, DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\nconst initialState = {\n  articles: [],\n  remoteArticles: [],\n  foundBadWords: false\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n    return { ...state,\n      articles: state.articles.concat(action.payload)\n    };\n  }\n\n  if (action.type === DATA_LOADED) {\n    return { ...state,\n      remoteArticles: state.remoteArticles.concat(action.payload)\n    };\n  }\n\n  if (action.type === FOUND_BAD_WORD) {\n    return { ...state,\n      foundBadWords: action.payload\n    };\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/eduardol/workspace/app-test-laliga/src/redux/reducers.js"],"names":["ADD_USER","DATA_REQUESTED","DATA_LOADED","API_ERRORED","initialState","articles","remoteArticles","foundBadWords","rootReducer","state","action","type","ADD_ARTICLE","concat","payload","FOUND_BAD_WORD"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,WAAnC,EAAgDC,WAAhD,QAAmE,WAAnE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,cAAc,EAAE,EAFG;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBC,WAApB,EAAiC;AAC/B,WAAO,EAAE,GAAGH,KAAL;AAAYJ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeQ,MAAf,CAAsBH,MAAM,CAACI,OAA7B;AAAtB,KAAP;AACD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBT,WAApB,EAAiC;AAC/B,WAAO,EAAE,GAAGO,KAAL;AAAYH,MAAAA,cAAc,EAAEG,KAAK,CAACH,cAAN,CAAqBO,MAArB,CAA4BH,MAAM,CAACI,OAAnC;AAA5B,KAAP;AACD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBI,cAApB,EAAoC;AAClC,WAAO,EAAE,GAAGN,KAAL;AAAYF,MAAAA,aAAa,EAAEG,MAAM,CAACI;AAAlC,KAAP;AACD;;AACD,SAAOL,KAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["import { ADD_USER, DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\n\nconst initialState = {\n  articles: [],\n  remoteArticles: [],\n  foundBadWords: false,\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n    return { ...state, articles: state.articles.concat(action.payload) };\n  }\n  if (action.type === DATA_LOADED) {\n    return { ...state, remoteArticles: state.remoteArticles.concat(action.payload) };\n  }\n  if (action.type === FOUND_BAD_WORD) {\n    return { ...state, foundBadWords: action.payload };\n  }\n  return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}