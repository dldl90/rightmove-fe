{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\nimport axios from 'axios';\n\nfunction getUsers() {\n  console.log('Fetching remote articles.');\n  return fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => console.log(data.data));\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({\n      type: DATA_LOADED,\n      payload\n    });\n  } catch (e) {\n    yield put({\n      type: API_ERRORED,\n      payload: e\n    });\n  }\n}\n\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}","map":{"version":3,"sources":["/Users/eduardol/workspace/app-test-laliga/src/redux/saga.js"],"names":["takeEvery","call","put","DATA_REQUESTED","DATA_LOADED","API_ERRORED","axios","getUsers","console","log","fetch","then","response","json","data","workerSaga","payload","getData","type","e","watcherSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,WAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,SAAOC,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEG,IAAD,IAAUN,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACA,IAAjB,CAFX,CAAP;AAGD;;AAED,UAAUC,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACgB,OAAD,CAA1B;AACA,UAAMf,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAEd,WAAR;AAAqBY,MAAAA;AAArB,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAMjB,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAEb,WAAR;AAAqBW,MAAAA,OAAO,EAAEG;AAA9B,KAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUC,WAAV,GAAwB;AACrC,QAAMpB,SAAS,CAACG,cAAD,EAAiBY,UAAjB,CAAf;AACD","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\nimport axios from 'axios'\n\nfunction getUsers() {\n  console.log('Fetching remote articles.');\n  return fetch('https://jsonplaceholder.typicode.com/posts')\n    .then((response) => response.json())\n    .then((data) => console.log(data.data));\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: DATA_LOADED, payload });\n  } catch (e) {\n    yield put({ type: API_ERRORED, payload: e });\n  }\n}\n\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}\n"]},"metadata":{},"sourceType":"module"}