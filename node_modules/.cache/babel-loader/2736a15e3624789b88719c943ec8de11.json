{"ast":null,"code":"\"use strict\";\n\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n  \"$id\": \"config.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"shared.json#/definitions/borders\"\n    },\n    \"columns\": {\n      \"$ref\": \"shared.json#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"shared.json#/definitions/column\"\n    },\n    \"drawHorizontalLine\": {\n      \"typeof\": \"function\"\n    },\n    \"singleLine\": {\n      \"typeof\": \"boolean\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst schema15 = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"topBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst schema16 = {\n  \"type\": \"string\"\n};\n\nfunction validate46(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (typeof data !== \"string\") {\n    const err0 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"should be string\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n\n    errors++;\n  }\n\n  validate46.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate45(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!schema15.properties.hasOwnProperty(key0)) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.topBody !== undefined) {\n      if (!validate46(data.topBody, {\n        dataPath: dataPath + \"/topBody\",\n        parentData: data,\n        parentDataProperty: \"topBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topJoin !== undefined) {\n      if (!validate46(data.topJoin, {\n        dataPath: dataPath + \"/topJoin\",\n        parentData: data,\n        parentDataProperty: \"topJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topLeft !== undefined) {\n      if (!validate46(data.topLeft, {\n        dataPath: dataPath + \"/topLeft\",\n        parentData: data,\n        parentDataProperty: \"topLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topRight !== undefined) {\n      if (!validate46(data.topRight, {\n        dataPath: dataPath + \"/topRight\",\n        parentData: data,\n        parentDataProperty: \"topRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomBody !== undefined) {\n      if (!validate46(data.bottomBody, {\n        dataPath: dataPath + \"/bottomBody\",\n        parentData: data,\n        parentDataProperty: \"bottomBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomJoin !== undefined) {\n      if (!validate46(data.bottomJoin, {\n        dataPath: dataPath + \"/bottomJoin\",\n        parentData: data,\n        parentDataProperty: \"bottomJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomLeft !== undefined) {\n      if (!validate46(data.bottomLeft, {\n        dataPath: dataPath + \"/bottomLeft\",\n        parentData: data,\n        parentDataProperty: \"bottomLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomRight !== undefined) {\n      if (!validate46(data.bottomRight, {\n        dataPath: dataPath + \"/bottomRight\",\n        parentData: data,\n        parentDataProperty: \"bottomRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyLeft !== undefined) {\n      if (!validate46(data.bodyLeft, {\n        dataPath: dataPath + \"/bodyLeft\",\n        parentData: data,\n        parentDataProperty: \"bodyLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyRight !== undefined) {\n      if (!validate46(data.bodyRight, {\n        dataPath: dataPath + \"/bodyRight\",\n        parentData: data,\n        parentDataProperty: \"bodyRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyJoin !== undefined) {\n      if (!validate46(data.bodyJoin, {\n        dataPath: dataPath + \"/bodyJoin\",\n        parentData: data,\n        parentDataProperty: \"bodyJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinBody !== undefined) {\n      if (!validate46(data.joinBody, {\n        dataPath: dataPath + \"/joinBody\",\n        parentData: data,\n        parentDataProperty: \"joinBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinLeft !== undefined) {\n      if (!validate46(data.joinLeft, {\n        dataPath: dataPath + \"/joinLeft\",\n        parentData: data,\n        parentDataProperty: \"joinLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinRight !== undefined) {\n      if (!validate46(data.joinRight, {\n        dataPath: dataPath + \"/joinRight\",\n        parentData: data,\n        parentDataProperty: \"joinRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinJoin !== undefined) {\n      if (!validate46(data.joinJoin, {\n        dataPath: dataPath + \"/joinJoin\",\n        parentData: data,\n        parentDataProperty: \"joinJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err1 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate45.errors = vErrors;\n  return errors === 0;\n}\n\nconst schema17 = {\n  \"type\": \"object\",\n  \"patternProperties\": {\n    \"^[0-9]+$\": {\n      \"$ref\": \"#/definitions/column\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema18 = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"alignment\": {\n      \"type\": \"string\",\n      \"enum\": [\"left\", \"right\", \"center\"]\n    },\n    \"width\": {\n      \"type\": \"number\"\n    },\n    \"wrapWord\": {\n      \"type\": \"boolean\"\n    },\n    \"truncate\": {\n      \"type\": \"number\"\n    },\n    \"paddingLeft\": {\n      \"type\": \"number\"\n    },\n    \"paddingRight\": {\n      \"type\": \"number\"\n    }\n  },\n  \"additionalProperties\": false\n};\n\nconst func0 = require(\"ajv/dist/compile/equal\");\n\nfunction validate64(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.alignment !== undefined) {\n      let data0 = data.alignment;\n\n      if (typeof data0 !== \"string\") {\n        const err1 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/alignment\",\n          schemaPath: \"#/properties/alignment/type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"should be string\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n\n      if (!(data0 === \"left\" || data0 === \"right\" || data0 === \"center\")) {\n        const err2 = {\n          keyword: \"enum\",\n          dataPath: dataPath + \"/alignment\",\n          schemaPath: \"#/properties/alignment/enum\",\n          params: {\n            allowedValues: schema18.properties.alignment.enum\n          },\n          message: \"should be equal to one of the allowed values\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.width !== undefined) {\n      let data1 = data.width;\n\n      if (!(typeof data1 == \"number\" && isFinite(data1))) {\n        const err3 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err4 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"should be boolean\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.truncate !== undefined) {\n      let data3 = data.truncate;\n\n      if (!(typeof data3 == \"number\" && isFinite(data3))) {\n        const err5 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingLeft !== undefined) {\n      let data4 = data.paddingLeft;\n\n      if (!(typeof data4 == \"number\" && isFinite(data4))) {\n        const err6 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingRight !== undefined) {\n      let data5 = data.paddingRight;\n\n      if (!(typeof data5 == \"number\" && isFinite(data5))) {\n        const err7 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err8 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err8];\n    } else {\n      vErrors.push(err8);\n    }\n\n    errors++;\n  }\n\n  validate64.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate63(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!pattern0.test(key0)) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    for (const key1 in data) {\n      if (pattern0.test(key1)) {\n        if (!validate64(data[key1], {\n          dataPath: dataPath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n          parentData: data,\n          parentDataProperty: key1,\n          rootData\n        })) {\n          vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n          errors = vErrors.length;\n        }\n      }\n    }\n  } else {\n    const err1 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate63.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate67(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.alignment !== undefined) {\n      let data0 = data.alignment;\n\n      if (typeof data0 !== \"string\") {\n        const err1 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/alignment\",\n          schemaPath: \"#/properties/alignment/type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"should be string\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n\n      if (!(data0 === \"left\" || data0 === \"right\" || data0 === \"center\")) {\n        const err2 = {\n          keyword: \"enum\",\n          dataPath: dataPath + \"/alignment\",\n          schemaPath: \"#/properties/alignment/enum\",\n          params: {\n            allowedValues: schema18.properties.alignment.enum\n          },\n          message: \"should be equal to one of the allowed values\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.width !== undefined) {\n      let data1 = data.width;\n\n      if (!(typeof data1 == \"number\" && isFinite(data1))) {\n        const err3 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err4 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"should be boolean\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.truncate !== undefined) {\n      let data3 = data.truncate;\n\n      if (!(typeof data3 == \"number\" && isFinite(data3))) {\n        const err5 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingLeft !== undefined) {\n      let data4 = data.paddingLeft;\n\n      if (!(typeof data4 == \"number\" && isFinite(data4))) {\n        const err6 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingRight !== undefined) {\n      let data5 = data.paddingRight;\n\n      if (!(typeof data5 == \"number\" && isFinite(data5))) {\n        const err7 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err8 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err8];\n    } else {\n      vErrors.push(err8);\n    }\n\n    errors++;\n  }\n\n  validate67.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate43(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  /*# sourceURL=\"config.json\" */\n  ;\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"border\" || key0 === \"columns\" || key0 === \"columnDefault\" || key0 === \"drawHorizontalLine\" || key0 === \"singleLine\")) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.border !== undefined) {\n      if (!validate45(data.border, {\n        dataPath: dataPath + \"/border\",\n        parentData: data,\n        parentDataProperty: \"border\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columns !== undefined) {\n      if (!validate63(data.columns, {\n        dataPath: dataPath + \"/columns\",\n        parentData: data,\n        parentDataProperty: \"columns\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate63.errors : vErrors.concat(validate63.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columnDefault !== undefined) {\n      if (!validate67(data.columnDefault, {\n        dataPath: dataPath + \"/columnDefault\",\n        parentData: data,\n        parentDataProperty: \"columnDefault\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.drawHorizontalLine !== undefined) {\n      if (typeof data.drawHorizontalLine != \"function\") {\n        const err1 = {\n          keyword: \"typeof\",\n          dataPath: dataPath + \"/drawHorizontalLine\",\n          schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n          params: {},\n          message: \"should pass \\\"typeof\\\" keyword validation\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.singleLine !== undefined) {\n      if (typeof data.singleLine != \"boolean\") {\n        const err2 = {\n          keyword: \"typeof\",\n          dataPath: dataPath + \"/singleLine\",\n          schemaPath: \"#/properties/singleLine/typeof\",\n          params: {},\n          message: \"should pass \\\"typeof\\\" keyword validation\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err3 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err3];\n    } else {\n      vErrors.push(err3);\n    }\n\n    errors++;\n  }\n\n  validate43.errors = vErrors;\n  return errors === 0;\n}\n\nexports[\"streamConfig.json\"] = validate69;\nconst schema20 = {\n  \"$id\": \"streamConfig.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"shared.json#/definitions/borders\"\n    },\n    \"columns\": {\n      \"$ref\": \"shared.json#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"shared.json#/definitions/column\"\n    },\n    \"columnCount\": {\n      \"type\": \"number\"\n    }\n  },\n  \"additionalProperties\": false\n};\n\nfunction validate70(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!schema15.properties.hasOwnProperty(key0)) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.topBody !== undefined) {\n      if (!validate46(data.topBody, {\n        dataPath: dataPath + \"/topBody\",\n        parentData: data,\n        parentDataProperty: \"topBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topJoin !== undefined) {\n      if (!validate46(data.topJoin, {\n        dataPath: dataPath + \"/topJoin\",\n        parentData: data,\n        parentDataProperty: \"topJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topLeft !== undefined) {\n      if (!validate46(data.topLeft, {\n        dataPath: dataPath + \"/topLeft\",\n        parentData: data,\n        parentDataProperty: \"topLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.topRight !== undefined) {\n      if (!validate46(data.topRight, {\n        dataPath: dataPath + \"/topRight\",\n        parentData: data,\n        parentDataProperty: \"topRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomBody !== undefined) {\n      if (!validate46(data.bottomBody, {\n        dataPath: dataPath + \"/bottomBody\",\n        parentData: data,\n        parentDataProperty: \"bottomBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomJoin !== undefined) {\n      if (!validate46(data.bottomJoin, {\n        dataPath: dataPath + \"/bottomJoin\",\n        parentData: data,\n        parentDataProperty: \"bottomJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomLeft !== undefined) {\n      if (!validate46(data.bottomLeft, {\n        dataPath: dataPath + \"/bottomLeft\",\n        parentData: data,\n        parentDataProperty: \"bottomLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bottomRight !== undefined) {\n      if (!validate46(data.bottomRight, {\n        dataPath: dataPath + \"/bottomRight\",\n        parentData: data,\n        parentDataProperty: \"bottomRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyLeft !== undefined) {\n      if (!validate46(data.bodyLeft, {\n        dataPath: dataPath + \"/bodyLeft\",\n        parentData: data,\n        parentDataProperty: \"bodyLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyRight !== undefined) {\n      if (!validate46(data.bodyRight, {\n        dataPath: dataPath + \"/bodyRight\",\n        parentData: data,\n        parentDataProperty: \"bodyRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.bodyJoin !== undefined) {\n      if (!validate46(data.bodyJoin, {\n        dataPath: dataPath + \"/bodyJoin\",\n        parentData: data,\n        parentDataProperty: \"bodyJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinBody !== undefined) {\n      if (!validate46(data.joinBody, {\n        dataPath: dataPath + \"/joinBody\",\n        parentData: data,\n        parentDataProperty: \"joinBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinLeft !== undefined) {\n      if (!validate46(data.joinLeft, {\n        dataPath: dataPath + \"/joinLeft\",\n        parentData: data,\n        parentDataProperty: \"joinLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinRight !== undefined) {\n      if (!validate46(data.joinRight, {\n        dataPath: dataPath + \"/joinRight\",\n        parentData: data,\n        parentDataProperty: \"joinRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.joinJoin !== undefined) {\n      if (!validate46(data.joinJoin, {\n        dataPath: dataPath + \"/joinJoin\",\n        parentData: data,\n        parentDataProperty: \"joinJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err1 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate70.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate87(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!pattern0.test(key0)) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    for (const key1 in data) {\n      if (pattern0.test(key1)) {\n        if (!validate64(data[key1], {\n          dataPath: dataPath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n          parentData: data,\n          parentDataProperty: key1,\n          rootData\n        })) {\n          vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n          errors = vErrors.length;\n        }\n      }\n    }\n  } else {\n    const err1 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n\n    errors++;\n  }\n\n  validate87.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate90(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.alignment !== undefined) {\n      let data0 = data.alignment;\n\n      if (typeof data0 !== \"string\") {\n        const err1 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/alignment\",\n          schemaPath: \"#/properties/alignment/type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"should be string\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n\n      if (!(data0 === \"left\" || data0 === \"right\" || data0 === \"center\")) {\n        const err2 = {\n          keyword: \"enum\",\n          dataPath: dataPath + \"/alignment\",\n          schemaPath: \"#/properties/alignment/enum\",\n          params: {\n            allowedValues: schema18.properties.alignment.enum\n          },\n          message: \"should be equal to one of the allowed values\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.width !== undefined) {\n      let data1 = data.width;\n\n      if (!(typeof data1 == \"number\" && isFinite(data1))) {\n        const err3 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err4 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"should be boolean\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.truncate !== undefined) {\n      let data3 = data.truncate;\n\n      if (!(typeof data3 == \"number\" && isFinite(data3))) {\n        const err5 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingLeft !== undefined) {\n      let data4 = data.paddingLeft;\n\n      if (!(typeof data4 == \"number\" && isFinite(data4))) {\n        const err6 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.paddingRight !== undefined) {\n      let data5 = data.paddingRight;\n\n      if (!(typeof data5 == \"number\" && isFinite(data5))) {\n        const err7 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err8 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err8];\n    } else {\n      vErrors.push(err8);\n    }\n\n    errors++;\n  }\n\n  validate90.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate69(data, {\n  dataPath = \"\",\n  parentData,\n  parentDataProperty,\n  rootData = data\n} = {}) {\n  /*# sourceURL=\"streamConfig.json\" */\n  ;\n  let vErrors = null;\n  let errors = 0;\n\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"border\" || key0 === \"columns\" || key0 === \"columnDefault\" || key0 === \"columnCount\")) {\n        const err0 = {\n          keyword: \"additionalProperties\",\n          dataPath,\n          schemaPath: \"#/additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"should NOT have additional properties\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      }\n    }\n\n    if (data.border !== undefined) {\n      if (!validate70(data.border, {\n        dataPath: dataPath + \"/border\",\n        parentData: data,\n        parentDataProperty: \"border\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate70.errors : vErrors.concat(validate70.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columns !== undefined) {\n      if (!validate87(data.columns, {\n        dataPath: dataPath + \"/columns\",\n        parentData: data,\n        parentDataProperty: \"columns\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columnDefault !== undefined) {\n      if (!validate90(data.columnDefault, {\n        dataPath: dataPath + \"/columnDefault\",\n        parentData: data,\n        parentDataProperty: \"columnDefault\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);\n        errors = vErrors.length;\n      }\n    }\n\n    if (data.columnCount !== undefined) {\n      let data3 = data.columnCount;\n\n      if (!(typeof data3 == \"number\" && isFinite(data3))) {\n        const err1 = {\n          keyword: \"type\",\n          dataPath: dataPath + \"/columnCount\",\n          schemaPath: \"#/properties/columnCount/type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"should be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n\n        errors++;\n      }\n    }\n  } else {\n    const err2 = {\n      keyword: \"type\",\n      dataPath,\n      schemaPath: \"#/type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"should be object\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err2];\n    } else {\n      vErrors.push(err2);\n    }\n\n    errors++;\n  }\n\n  validate69.errors = vErrors;\n  return errors === 0;\n}","map":{"version":3,"sources":["/Users/eduardol/workspace/app-test-laliga/node_modules/table/dist/validators.js"],"names":["exports","validate43","schema13","schema15","schema16","validate46","data","dataPath","parentData","parentDataProperty","rootData","vErrors","errors","err0","keyword","schemaPath","params","type","message","push","validate45","Array","isArray","key0","properties","hasOwnProperty","additionalProperty","topBody","undefined","concat","length","topJoin","topLeft","topRight","bottomBody","bottomJoin","bottomLeft","bottomRight","bodyLeft","bodyRight","bodyJoin","joinBody","joinLeft","joinRight","joinJoin","err1","schema17","pattern0","RegExp","schema18","func0","require","validate64","alignment","data0","err2","allowedValues","enum","width","data1","isFinite","err3","wrapWord","err4","truncate","data3","err5","paddingLeft","data4","err6","paddingRight","data5","err7","err8","validate63","test","key1","replace","validate67","border","columns","columnDefault","drawHorizontalLine","singleLine","validate69","schema20","validate70","validate87","validate90","columnCount"],"mappings":"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","sourcesContent":["\"use strict\";\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n    \"$id\": \"config.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"drawHorizontalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"singleLine\": {\n            \"typeof\": \"boolean\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst schema15 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"topBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst schema16 = {\n    \"type\": \"string\"\n};\n\nfunction validate46(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"should be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        } else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    validate46.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate45(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(schema15.properties.hasOwnProperty(key0))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                    dataPath: dataPath + \"/topBody\",\n                    parentData: data,\n                    parentDataProperty: \"topBody\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                    dataPath: dataPath + \"/topJoin\",\n                    parentData: data,\n                    parentDataProperty: \"topJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                    dataPath: dataPath + \"/topLeft\",\n                    parentData: data,\n                    parentDataProperty: \"topLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                    dataPath: dataPath + \"/topRight\",\n                    parentData: data,\n                    parentDataProperty: \"topRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                    dataPath: dataPath + \"/bottomBody\",\n                    parentData: data,\n                    parentDataProperty: \"bottomBody\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                    dataPath: dataPath + \"/bottomJoin\",\n                    parentData: data,\n                    parentDataProperty: \"bottomJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                    dataPath: dataPath + \"/bottomLeft\",\n                    parentData: data,\n                    parentDataProperty: \"bottomLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                    dataPath: dataPath + \"/bottomRight\",\n                    parentData: data,\n                    parentDataProperty: \"bottomRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                    dataPath: dataPath + \"/bodyLeft\",\n                    parentData: data,\n                    parentDataProperty: \"bodyLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                    dataPath: dataPath + \"/bodyRight\",\n                    parentData: data,\n                    parentDataProperty: \"bodyRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                    dataPath: dataPath + \"/bodyJoin\",\n                    parentData: data,\n                    parentDataProperty: \"bodyJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                    dataPath: dataPath + \"/joinBody\",\n                    parentData: data,\n                    parentDataProperty: \"joinBody\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                    dataPath: dataPath + \"/joinLeft\",\n                    parentData: data,\n                    parentDataProperty: \"joinLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                    dataPath: dataPath + \"/joinRight\",\n                    parentData: data,\n                    parentDataProperty: \"joinRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                    dataPath: dataPath + \"/joinJoin\",\n                    parentData: data,\n                    parentDataProperty: \"joinJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    } else {\n        const err1 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        } else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate45.errors = vErrors;\n    return errors === 0;\n}\nconst schema17 = {\n    \"type\": \"object\",\n    \"patternProperties\": {\n        \"^[0-9]+$\": {\n            \"$ref\": \"#/definitions/column\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema18 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"alignment\": {\n            \"type\": \"string\",\n            \"enum\": [\"left\", \"right\", \"center\"]\n        },\n        \"width\": {\n            \"type\": \"number\"\n        },\n        \"wrapWord\": {\n            \"type\": \"boolean\"\n        },\n        \"truncate\": {\n            \"type\": \"number\"\n        },\n        \"paddingLeft\": {\n            \"type\": \"number\"\n        },\n        \"paddingRight\": {\n            \"type\": \"number\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst func0 = require(\"ajv/dist/compile/equal\");\n\nfunction validate64(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!((((((key0 === \"alignment\") || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            let data0 = data.alignment;\n            if (typeof data0 !== \"string\") {\n                const err1 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/alignment\",\n                    schemaPath: \"#/properties/alignment/type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"should be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                } else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data0 === \"left\") || (data0 === \"right\")) || (data0 === \"center\"))) {\n                const err2 = {\n                    keyword: \"enum\",\n                    dataPath: dataPath + \"/alignment\",\n                    schemaPath: \"#/properties/alignment/enum\",\n                    params: {\n                        allowedValues: schema18.properties.alignment.enum\n                    },\n                    message: \"should be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                } else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data1 = data.width;\n            if (!((typeof data1 == \"number\") && (isFinite(data1)))) {\n                const err3 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                } else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err4 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"should be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err4];\n                } else {\n                    vErrors.push(err4);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data3 = data.truncate;\n            if (!((typeof data3 == \"number\") && (isFinite(data3)))) {\n                const err5 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                } else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data4 = data.paddingLeft;\n            if (!((typeof data4 == \"number\") && (isFinite(data4)))) {\n                const err6 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                } else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data5 = data.paddingRight;\n            if (!((typeof data5 == \"number\") && (isFinite(data5)))) {\n                const err7 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                } else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n    } else {\n        const err8 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err8];\n        } else {\n            vErrors.push(err8);\n        }\n        errors++;\n    }\n    validate64.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate63(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate64(data[key1], {\n                        dataPath: dataPath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                        parentData: data,\n                        parentDataProperty: key1,\n                        rootData\n                    }))) {\n                    vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    } else {\n        const err1 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        } else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate63.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate67(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!((((((key0 === \"alignment\") || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            let data0 = data.alignment;\n            if (typeof data0 !== \"string\") {\n                const err1 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/alignment\",\n                    schemaPath: \"#/properties/alignment/type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"should be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                } else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data0 === \"left\") || (data0 === \"right\")) || (data0 === \"center\"))) {\n                const err2 = {\n                    keyword: \"enum\",\n                    dataPath: dataPath + \"/alignment\",\n                    schemaPath: \"#/properties/alignment/enum\",\n                    params: {\n                        allowedValues: schema18.properties.alignment.enum\n                    },\n                    message: \"should be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                } else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data1 = data.width;\n            if (!((typeof data1 == \"number\") && (isFinite(data1)))) {\n                const err3 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                } else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err4 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"should be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err4];\n                } else {\n                    vErrors.push(err4);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data3 = data.truncate;\n            if (!((typeof data3 == \"number\") && (isFinite(data3)))) {\n                const err5 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                } else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data4 = data.paddingLeft;\n            if (!((typeof data4 == \"number\") && (isFinite(data4)))) {\n                const err6 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                } else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data5 = data.paddingRight;\n            if (!((typeof data5 == \"number\") && (isFinite(data5)))) {\n                const err7 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                } else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n    } else {\n        const err8 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err8];\n        } else {\n            vErrors.push(err8);\n        }\n        errors++;\n    }\n    validate67.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate43(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    /*# sourceURL=\"config.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((key0 === \"border\") || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"drawHorizontalLine\")) || (key0 === \"singleLine\"))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate45(data.border, {\n                    dataPath: dataPath + \"/border\",\n                    parentData: data,\n                    parentDataProperty: \"border\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate63(data.columns, {\n                    dataPath: dataPath + \"/columns\",\n                    parentData: data,\n                    parentDataProperty: \"columns\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate63.errors : vErrors.concat(validate63.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate67(data.columnDefault, {\n                    dataPath: dataPath + \"/columnDefault\",\n                    parentData: data,\n                    parentDataProperty: \"columnDefault\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.drawHorizontalLine !== undefined) {\n            if (typeof data.drawHorizontalLine != \"function\") {\n                const err1 = {\n                    keyword: \"typeof\",\n                    dataPath: dataPath + \"/drawHorizontalLine\",\n                    schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n                    params: {},\n                    message: \"should pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                } else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n        }\n        if (data.singleLine !== undefined) {\n            if (typeof data.singleLine != \"boolean\") {\n                const err2 = {\n                    keyword: \"typeof\",\n                    dataPath: dataPath + \"/singleLine\",\n                    schemaPath: \"#/properties/singleLine/typeof\",\n                    params: {},\n                    message: \"should pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                } else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n    } else {\n        const err3 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        } else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    validate43.errors = vErrors;\n    return errors === 0;\n}\nexports[\"streamConfig.json\"] = validate69;\nconst schema20 = {\n    \"$id\": \"streamConfig.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"columnCount\": {\n            \"type\": \"number\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\nfunction validate70(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(schema15.properties.hasOwnProperty(key0))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                    dataPath: dataPath + \"/topBody\",\n                    parentData: data,\n                    parentDataProperty: \"topBody\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                    dataPath: dataPath + \"/topJoin\",\n                    parentData: data,\n                    parentDataProperty: \"topJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                    dataPath: dataPath + \"/topLeft\",\n                    parentData: data,\n                    parentDataProperty: \"topLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                    dataPath: dataPath + \"/topRight\",\n                    parentData: data,\n                    parentDataProperty: \"topRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                    dataPath: dataPath + \"/bottomBody\",\n                    parentData: data,\n                    parentDataProperty: \"bottomBody\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                    dataPath: dataPath + \"/bottomJoin\",\n                    parentData: data,\n                    parentDataProperty: \"bottomJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                    dataPath: dataPath + \"/bottomLeft\",\n                    parentData: data,\n                    parentDataProperty: \"bottomLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                    dataPath: dataPath + \"/bottomRight\",\n                    parentData: data,\n                    parentDataProperty: \"bottomRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                    dataPath: dataPath + \"/bodyLeft\",\n                    parentData: data,\n                    parentDataProperty: \"bodyLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                    dataPath: dataPath + \"/bodyRight\",\n                    parentData: data,\n                    parentDataProperty: \"bodyRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                    dataPath: dataPath + \"/bodyJoin\",\n                    parentData: data,\n                    parentDataProperty: \"bodyJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                    dataPath: dataPath + \"/joinBody\",\n                    parentData: data,\n                    parentDataProperty: \"joinBody\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                    dataPath: dataPath + \"/joinLeft\",\n                    parentData: data,\n                    parentDataProperty: \"joinLeft\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                    dataPath: dataPath + \"/joinRight\",\n                    parentData: data,\n                    parentDataProperty: \"joinRight\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                    dataPath: dataPath + \"/joinJoin\",\n                    parentData: data,\n                    parentDataProperty: \"joinJoin\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    } else {\n        const err1 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        } else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate70.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate87(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate64(data[key1], {\n                        dataPath: dataPath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                        parentData: data,\n                        parentDataProperty: key1,\n                        rootData\n                    }))) {\n                    vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    } else {\n        const err1 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        } else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate87.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate90(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!((((((key0 === \"alignment\") || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            let data0 = data.alignment;\n            if (typeof data0 !== \"string\") {\n                const err1 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/alignment\",\n                    schemaPath: \"#/properties/alignment/type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"should be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                } else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data0 === \"left\") || (data0 === \"right\")) || (data0 === \"center\"))) {\n                const err2 = {\n                    keyword: \"enum\",\n                    dataPath: dataPath + \"/alignment\",\n                    schemaPath: \"#/properties/alignment/enum\",\n                    params: {\n                        allowedValues: schema18.properties.alignment.enum\n                    },\n                    message: \"should be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                } else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data1 = data.width;\n            if (!((typeof data1 == \"number\") && (isFinite(data1)))) {\n                const err3 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                } else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err4 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"should be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err4];\n                } else {\n                    vErrors.push(err4);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data3 = data.truncate;\n            if (!((typeof data3 == \"number\") && (isFinite(data3)))) {\n                const err5 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                } else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data4 = data.paddingLeft;\n            if (!((typeof data4 == \"number\") && (isFinite(data4)))) {\n                const err6 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                } else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data5 = data.paddingRight;\n            if (!((typeof data5 == \"number\") && (isFinite(data5)))) {\n                const err7 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                } else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n    } else {\n        const err8 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err8];\n        } else {\n            vErrors.push(err8);\n        }\n        errors++;\n    }\n    validate90.errors = vErrors;\n    return errors === 0;\n}\n\nfunction validate69(data, {\n    dataPath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n} = {}) {\n    /*# sourceURL=\"streamConfig.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!((((key0 === \"border\") || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"columnCount\"))) {\n                const err0 = {\n                    keyword: \"additionalProperties\",\n                    dataPath,\n                    schemaPath: \"#/additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"should NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                } else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate70(data.border, {\n                    dataPath: dataPath + \"/border\",\n                    parentData: data,\n                    parentDataProperty: \"border\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate70.errors : vErrors.concat(validate70.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate87(data.columns, {\n                    dataPath: dataPath + \"/columns\",\n                    parentData: data,\n                    parentDataProperty: \"columns\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate90(data.columnDefault, {\n                    dataPath: dataPath + \"/columnDefault\",\n                    parentData: data,\n                    parentDataProperty: \"columnDefault\",\n                    rootData\n                }))) {\n                vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnCount !== undefined) {\n            let data3 = data.columnCount;\n            if (!((typeof data3 == \"number\") && (isFinite(data3)))) {\n                const err1 = {\n                    keyword: \"type\",\n                    dataPath: dataPath + \"/columnCount\",\n                    schemaPath: \"#/properties/columnCount/type\",\n                    params: {\n                        type: \"number\"\n                    },\n                    message: \"should be number\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                } else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n        }\n    } else {\n        const err2 = {\n            keyword: \"type\",\n            dataPath,\n            schemaPath: \"#/type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"should be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        } else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    validate69.errors = vErrors;\n    return errors === 0;\n}"]},"metadata":{},"sourceType":"script"}