{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}\n\nfunction getData() {\n  console.log('Fetching remote articles.');\n  return fetch('https://reqres.in/api/users').then(response => response.json().then(data => console.log(data)));\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({\n      type: DATA_LOADED,\n      payload\n    });\n  } catch (e) {\n    yield put({\n      type: API_ERRORED,\n      payload: e\n    });\n  }\n}","map":{"version":3,"sources":["/Users/eduardol/workspace/app-test-laliga/src/redux/saga.js"],"names":["takeEvery","call","put","DATA_REQUESTED","DATA_LOADED","API_ERRORED","watcherSaga","workerSaga","getData","console","log","fetch","then","response","json","data","payload","type","e"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,WAAzD;AAEA,eAAe,UAAUC,WAAV,GAAwB;AACrC,QAAMN,SAAS,CAACG,cAAD,EAAiBI,UAAjB,CAAf;AACD;;AAED,SAASC,OAAT,GAAmB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,SAAOC,KAAK,CAAC,6BAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,GACjBF,IADiB,CACXG,IAAD,IAAUN,OAAO,CAACC,GAAR,CAAYK,IAAZ,CADE,CADf,CAAP;AAGD;;AAGD,UAAUR,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMS,OAAO,GAAG,MAAMf,IAAI,CAACO,OAAD,CAA1B;AACA,UAAMN,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAEb,WAAR;AAAqBY,MAAAA;AAArB,KAAD,CAAT;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACV,UAAMhB,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAEZ,WAAR;AAAqBW,MAAAA,OAAO,EAAEE;AAA9B,KAAD,CAAT;AACD;AACF","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\n\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}\n\nfunction getData() {\n  console.log('Fetching remote articles.');\n  return fetch('https://reqres.in/api/users')\n    .then((response) => response.json()\n      .then((data) => console.log(data)));\n}\n\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: DATA_LOADED, payload });\n  } catch (e) {\n    yield put({ type: API_ERRORED, payload: e });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}