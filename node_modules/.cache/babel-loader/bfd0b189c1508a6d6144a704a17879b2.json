{"ast":null,"code":"import { ADD_ARTICLE, DATA_LOADED, FOUND_BAD_WORD } from './actions';\nconst initialState = {\n  articles: [],\n  remoteArticles: [],\n  foundBadWords: false\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n    return Object.assign({}, state, {\n      articles: state.articles.concat(action.payload)\n    });\n  }\n\n  if (action.type === DATA_LOADED) {\n    return Object.assign({}, state, {\n      remoteArticles: state.remoteArticles.concat(action.payload)\n    });\n  }\n\n  if (action.type === FOUND_BAD_WORD) {\n    return Object.assign({}, state, {\n      foundBadWords: action.payload\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/eduardol/workspace/app-test-laliga/src/redux/reducers.js"],"names":["ADD_ARTICLE","DATA_LOADED","FOUND_BAD_WORD","initialState","articles","remoteArticles","foundBadWords","rootReducer","state","action","type","Object","assign","concat","payload"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC,QAAyD,WAAzD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,cAAc,EAAE,EAFG;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,WAApB,EAAiC;AAC/B,WAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeS,MAAf,CAAsBJ,MAAM,CAACK,OAA7B;AADoB,KAAzB,CAAP;AAGD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBT,WAApB,EAAiC;AAC/B,WAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BH,MAAAA,cAAc,EAAEG,KAAK,CAACH,cAAN,CAAqBQ,MAArB,CAA4BJ,MAAM,CAACK,OAAnC;AADc,KAAzB,CAAP;AAGD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBR,cAApB,EAAoC;AAClC,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,MAAAA,aAAa,EAAEG,MAAM,CAACK;AADQ,KAAzB,CAAP;AAGD;;AACD,SAAON,KAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["import { ADD_ARTICLE, DATA_LOADED, FOUND_BAD_WORD } from './actions';\n\nconst initialState = {\n  articles: [],\n  remoteArticles: [],\n  foundBadWords: false\n}\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n    return Object.assign({}, state, {\n      articles: state.articles.concat(action.payload)\n    })\n  }\n  if (action.type === DATA_LOADED) {\n    return Object.assign({}, state, {\n      remoteArticles: state.remoteArticles.concat(action.payload)\n    })\n  }\n  if (action.type === FOUND_BAD_WORD) {\n    return Object.assign({}, state, {\n      foundBadWords: action.payload\n    })\n  }\n  return state\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}