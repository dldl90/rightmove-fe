{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects'; // import axios from 'axios';\n\nimport { DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({\n      type: DATA_LOADED,\n      payload\n    });\n  } catch (e) {\n    yield put({\n      type: API_ERRORED,\n      payload: e\n    });\n  }\n}\n\nfunction getData() {\n  console.log('Fetching remote articles.');\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json());\n} // function* onFetchUsers() {\n//   try {\n//     // API Request\n//     const response = yield call(axios.get, ['https://jsonplaceholder.typicode.com/posts']);\n//     yield put(receiveDataSuccess(response.data[0]));\n//   } catch (e) {\n//     yield put(receiveDataFailure(e));\n//   }\n// }\n// // eslint-disable-next-line import/prefer-default-export\n// export function* fetchUserSaga() {\n//   yield takeEvery(DATA_REQUESTED, onFetchUsers);\n// }","map":{"version":3,"sources":["/Users/eduardol/workspace/app-test-laliga/src/redux/saga.js"],"names":["takeEvery","call","put","DATA_REQUESTED","DATA_LOADED","API_ERRORED","watcherSaga","workerSaga","payload","getData","type","e","console","log","fetch","then","response","json"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC,C,CACA;;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,WAAtC,QAAyD,WAAzD;AAGA,eAAe,UAAUC,WAAV,GAAwB;AACrC,QAAMN,SAAS,CAACG,cAAD,EAAiBI,UAAjB,CAAf;AACD;;AAED,UAAUA,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMP,IAAI,CAACQ,OAAD,CAA1B;AACA,UAAMP,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEN,WAAR;AAAqBI,MAAAA;AAArB,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAMT,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEL,WAAR;AAAqBG,MAAAA,OAAO,EAAEG;AAA9B,KAAD,CAAT;AACD;AACF;;AAED,SAASF,OAAT,GAAmB;AACjBG,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,SAAOC,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyDC,QAAQ,IACtEA,QAAQ,CAACC,IAAT,EADK,CAAP;AAGD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n// import axios from 'axios';\nimport { DATA_REQUESTED, DATA_LOADED, API_ERRORED } from './actions';\n\n\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}\n\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData)\n    yield put({ type: DATA_LOADED, payload })\n  } catch (e) {\n    yield put({ type: API_ERRORED, payload: e })\n  }\n}\n\nfunction getData() {\n  console.log('Fetching remote articles.')\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response =>\n    response.json()\n  );\n}\n\n\n// function* onFetchUsers() {\n//   try {\n//     // API Request\n//     const response = yield call(axios.get, ['https://jsonplaceholder.typicode.com/posts']);\n//     yield put(receiveDataSuccess(response.data[0]));\n//   } catch (e) {\n//     yield put(receiveDataFailure(e));\n//   }\n// }\n\n// // eslint-disable-next-line import/prefer-default-export\n// export function* fetchUserSaga() {\n//   yield takeEvery(DATA_REQUESTED, onFetchUsers);\n// }\n"]},"metadata":{},"sourceType":"module"}